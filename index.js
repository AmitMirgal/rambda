const R=require("./compose"),add=(a,b)=>{if(b===void 0){return c=>add(a,c);}else{return a+b;}},adjust=(d,e,f)=>{if(e===void 0){return(g,h)=>adjust(d,g,h);}else if(f===void 0){return j=>adjust(d,e,j);}else{return f.map((k,l)=>{if(l===e){return d(f[e]);}else{return k;}});}},any=(m,n)=>{if(n===void 0){return o=>any(m,o);}else{let p=!1;n.map(q=>{if(m(q)===!0){p=!0;}});return p;}},append=(r,s)=>{if(s===void 0){return t=>append(r,t);}else{const u=s;u.unshift(r);return u;}},contains=(v,w)=>{if(w===void 0){return x=>contains(v,x);}else{return any(y=>v===y,w);}},filter=(z,A)=>{if(A===void 0){return B=>filter(z,B);}else{return A.filter(z);}},flatten=C=>{const D=[];C.map(E=>{if(E instanceof Array){E.map(F=>{if(F instanceof Array){F.map(G=>{if(G instanceof Array){D.push(...G);}else{D.push(G);}});}else{D.push(F);}});}else{D.push(E);}});return D;},drop=(H,I)=>{if(I===void 0){return J=>drop(H,J);}else{const K=I;return K.slice(H);}},dropLast=(L,M)=>{if(M===void 0){return N=>dropLast(L,N);}else{const O=M;return O.slice(0,-L);}},head=P=>dropLast(P.length-1,P),init=Q=>dropLast(1,Q),join=(S,T)=>{if(T===void 0){return U=>join(S,U);}else{return T.join(S);}},map=(V,W)=>{if(W===void 0){return X=>map(V,X);}else{return W.map(V);}},last=Y=>Y[Y.length-1],prepend=(Z,a1)=>{if(a1===void 0){return b1=>prepend(Z,b1);}else{const c1=a1;c1.push(Z);return c1;}},propEq=(d1,e1,f1)=>{if(e1===void 0){return(g1,h1)=>propEq(d1,g1,h1);}else if(f1===void 0){return i1=>propEq(d1,e1,i1);}else{return f1[d1]===e1;}},range=(j1,k1)=>{const l1=[];for(let i=j1;i<k1;i++){l1.push(i);}return l1;},repeat=(a,m1)=>{if(m1===void 0){return n1=>repeat(a,n1);}else{const o1=range(0,m1);return o1.fill(a);}},replace=(p1,q1,r1)=>{if(q1===void 0){return(s1,t1)=>replace(p1,s1,t1);}else if(r1===void 0){return u1=>replace(p1,q1,u1);}else{return r1.replace(p1,q1);}},subtract=(a,b)=>{if(b===void 0){return c=>subtract(a,c);}else{return a-b;}},sort=(fn,w1)=>{if(w1===void 0){return x1=>sort(fn,x1);}else{const y1=w1;return y1.sort(fn);}},sortBy=(fn,A1)=>{if(A1===void 0){return B1=>sortBy(fn,B1);}else{const C1=A1;return C1.sort((a,b)=>{const D1=fn(a),E1=fn(b);return D1<E1?-1:D1>E1?1:0;});}},split=(F1,G1)=>{if(G1===void 0){return H1=>split(F1,H1);}else{return G1.split(F1);}},splitEvery=(I1,a)=>{if(a===void 0){return J1=>splitEvery(I1,J1);}else{I1=I1>1?I1:1;const K1=[];let L1=0;while(L1<a.length){K1.push(a.slice(L1,L1+=I1));}return K1;}},tail=M1=>drop(1,M1),take=(N1,O1)=>{if(O1===void 0){return P1=>take(N1,P1);}else{const Q1=O1;return Q1.slice(0,N1);}},takeLast=(R1,S1)=>{if(S1===void 0){return T1=>dropLast(R1,T1);}else{const U1=S1;R1=R1>U1.length?U1.length:R1;return U1.slice(U1.length-R1);}},toLower=a=>a.toLowerCase(),toUpper=a=>a.toUpperCase(),test=(V1,W1)=>{if(W1===void 0){return X1=>test(V1,X1);}else{return W1.search(V1)===-1?!1:!0;}},type=a=>{if(a===null){return"Null";}else if(a.splice!==void 0){return"Array";}else if(a.freeze!==void 0){return"Object";}else if(typeof a==="boolean"){return"Boolean";}else if(typeof a==="number"){return"Number";}else if(typeof a==="string"){return"String";}else if(a===void 0){return"Undefined";}else if(a instanceof RegExp){return"RegExp";}return"Object";},values=Y1=>{const Z1=[];for(key in Y1){Z1.push(Y1[key]);}return Z1;},uniq=a2=>{const b2=[];return a2.filter(c2=>{if(b2.includes(c2)){return!1;}else{b2.push(c2);return!0;}});},update=(d2,e2,f2)=>{if(e2===void 0){return(g2,h2)=>update(d2,g2,h2);}else if(f2===void 0){return i2=>update(d2,e2,i2);}else{return f2.fill(d2,e2,e2+1);}};module.exports.add=add;module.exports.adjust=adjust;module.exports.any=any;module.exports.append=append;module.exports.contains=contains;module.exports.compose=R.compose;module.exports.drop=drop;module.exports.dropLast=dropLast;module.exports.filter=filter;module.exports.flatten=flatten;module.exports.head=head;module.exports.init=init;module.exports.join=join;module.exports.last=last;module.exports.map=map;module.exports.prepend=prepend;module.exports.propEq=propEq;module.exports.range=range;module.exports.repeat=repeat;module.exports.replace=replace;module.exports.sort=sort;module.exports.sortBy=sortBy;module.exports.split=split;module.exports.splitEvery=splitEvery;module.exports.subtract=subtract;module.exports.tail=tail;module.exports.take=take;module.exports.takeLast=takeLast;module.exports.test=test;module.exports.toLower=toLower;module.exports.toUpper=toUpper;module.exports.type=type;module.exports.values=values;module.exports.uniq=uniq;module.exports.update=update;